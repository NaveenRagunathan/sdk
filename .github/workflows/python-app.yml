# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        !sudo curl -L https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz -o /usr/local/bin/ffmpeg.tar.xz
        %cd /usr/local/bin/
        !7z e /usr/local/bin/ffmpeg.tar.xz
        !7z e /usr/local/bin/ffmpeg.tar
        !sudo chmod a+rx /usr/local/bin/ffmpeg
        %cd /content/
        !sudo curl -L https://mkvtoolnix.download/appimage/MKVToolNix_GUI-70.0.0-x86_64.AppImage -o /usr/local/bin/MKVToolNix_GUI-70.0.0-x86_64.AppImage
        !sudo chmod u+rx /usr/local/bin/MKVToolNix_GUI-70.0.0-x86_64.AppImage
        !sudo ln -s /usr/local/bin/MKVToolNix_GUI-70.0.0-x86_64.AppImage /usr/local/bin/mkvmerge
        !sudo chmod a+rx /usr/local/bin/mkvmerge
        !ffmpeg -version
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        VIKIT_API_TOKEN: ${{ secrets.VIKIT_API_TOKEN }}      
        ELEVEN_LABS_KEY: ${{ secrets.ELEVEN_LABS_KEY }}      
        REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}      
        OPENAI_WHISPER_MODEL_ID: ${{ secrets.OPENAI_WHISPER_MODEL_ID }}      
      run: |
        pytest -s -m "unit"
